# Generated by Django 2.2.12 on 2020-04-03 22:53

import datetime
from datetime import timezone
from django.db import migrations, models
import django.db.models.deletion


# Manually copied custom migration function.
def configure_standing_committees(apps, schema_editor):
    Committee = apps.get_model('djalthingi', 'Committee')

    NON_STANDING_COMMITTIES = (
        'forsætisnefnd',
        'Íslandsdeild Alþjóðaþingmannasambandsins',
        'Íslandsdeild Evrópuráðsþingsins',
        'Íslandsdeild NATO-þingsins',
        'Íslandsdeild Norðurlandaráðs',
        'Íslandsdeild Vestnorræna ráðsins',
        'Íslandsdeild Vestur-Evrópusambandsins',
        'Íslandsdeild þingmannanefnda EFTA og EES',
        'Íslandsdeild þingmannanefndar EFTA',
        'Íslandsdeild þingmannaráðstefnunnar um norðurskautsmál',
        'Íslandsdeild þings Öryggis- og samvinnustofnunar Evrópu',
        'kjörbréfanefnd',
        'sérnefnd um stjórnarskrármál',
        'sérnefnd um stjórnarskrármál (385. mál á 136. þingi)',
        'starfshópur utanríkismálanefndar um Evrópumál',
        'Þingmannanefnd Íslands og Evrópusambandsins af hálfu Alþingis',
        'þingmannanefnd til að fjalla um skýrslu rannsóknarnefndar Alþingis',
        'þingskapanefnd',
    )

    for committee in Committee.objects.all():
        committee.is_standing = committee.name not in NON_STANDING_COMMITTIES
        committee.save()


# Only here for migration reversability.
def dummy_function(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    replaces = [('djalthingi', '0001_initial'), ('djalthingi', '0002_proposer_issue'), ('djalthingi', '0003_auto_20161015_1815'), ('djalthingi', '0004_session_timing_text'), ('djalthingi', '0005_review_sender_name_description'), ('djalthingi', '0006_auto_20161212_0031'), ('djalthingi', '0007_auto_20161212_0032'), ('djalthingi', '0008_auto_20161212_0130'), ('djalthingi', '0009_auto_20161212_0131'), ('djalthingi', '0010_auto_20161212_1319'), ('djalthingi', '0011_auto_20161212_1400'), ('djalthingi', '0012_issue_time_published'), ('djalthingi', '0013_auto_20161228_1648'), ('djalthingi', '0014_party_slug'), ('djalthingi', '0015_auto_20161229_1625'), ('djalthingi', '0016_auto_20170411_2027'), ('djalthingi', '0017_votecasting'), ('djalthingi', '0018_vote'), ('djalthingi', '0019_auto_20170427_1758'), ('djalthingi', '0020_auto_20170427_1830'), ('djalthingi', '0021_rapporteur'), ('djalthingi', '0022_auto_20171110_0829'), ('djalthingi', '0023_parliament_last_full_update'), ('djalthingi', '0024_auto_20171204_1745'), ('djalthingi', '0025_auto_20180212_1742'), ('djalthingi', '0026_auto_20180214_1641'), ('djalthingi', '0027_auto_20180219_2334'), ('djalthingi', '0028_president_presidentseat'), ('djalthingi', '0029_review_president_seat'), ('djalthingi', '0030_auto_20180224_1437'), ('djalthingi', '0031_auto_20180224_1443'), ('djalthingi', '0032_auto_20180302_1959'), ('djalthingi', '0033_auto_20180310_1258'), ('djalthingi', '0034_auto_20180319_2009'), ('djalthingi', '0035_committee_is_standing'), ('djalthingi', '0036_auto_20180410_2153'), ('djalthingi', '0037_remove_issue_final_vote_complete'), ('djalthingi', '0038_auto_20180420_2112'), ('djalthingi', '0039_speech_president'), ('djalthingi', '0040_auto_20181204_1544'), ('djalthingi', '0041_issue_from_government'), ('djalthingi', '0042_review_pending_deletion'), ('djalthingi', '0043_committeeagenda_location'), ('djalthingi', '0044_auto_20191031_1704'), ('djalthingi', '0045_issue_committee_agenda_item_count')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('abbreviation_short', models.CharField(max_length=20)),
                ('abbreviation_long', models.CharField(max_length=30)),
                ('committee_xml_id', models.IntegerField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_num', models.IntegerField()),
                ('issue_type', models.CharField(choices=[(b'l', b'lagafrumvarp'), (b'a', b'\xc3\xbeings\xc3\xa1lyktunartillaga'), (b'm', b'fyrirspurn'), (b'q', b'fyrirspurn til skriflegs svars'), (b's', b'sk\xc3\xbdrsla'), (b'b', b'bei\xc3\xb0ni um sk\xc3\xbdrslu')], max_length=1)),
                ('issue_group', models.CharField(choices=[(b'A', b'\xc3\xbeingm\xc3\xa1l me\xc3\xb0 \xc3\xbeingskj\xc3\xb6lum'), (b'B', b'\xc3\xbeingm\xc3\xa1l \xc3\xa1n \xc3\xbeingskjala')], default=b'A', max_length=1)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('final_vote_complete', models.BooleanField(default=False)),
                ('document_count', models.IntegerField(default=0)),
                ('review_count', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['issue_num'],
            },
        ),
        migrations.CreateModel(
            name='IssueSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.TextField()),
                ('change_description', models.TextField()),
                ('changes_to_law', models.TextField()),
                ('cost_and_revenue', models.TextField()),
                ('other_info', models.TextField()),
                ('review_description', models.TextField()),
                ('fate', models.TextField()),
                ('media_coverage', models.TextField()),
                ('issue', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='djalthingi.Issue')),
            ],
        ),
        migrations.CreateModel(
            name='Parliament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parliament_num', models.IntegerField(unique=True)),
                ('era', models.CharField(default='', max_length=9)),
                ('timing_end', models.DateTimeField(null=True)),
                ('timing_start', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0, tzinfo=timezone.utc))),
                ('last_full_update', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'ordering': ['-parliament_num'],
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('abbreviation_short', models.CharField(max_length=20)),
                ('abbreviation_long', models.CharField(max_length=30)),
                ('parliament_num_first', models.IntegerField()),
                ('parliament_num_last', models.IntegerField(null=True)),
                ('party_xml_id', models.IntegerField(unique=True)),
                ('parliaments', models.ManyToManyField(related_name='parties', to='djalthingi.Parliament')),
                ('slug', models.CharField(default='', max_length=100)),
                ('special', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['special', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ssn', models.CharField(max_length=10)),
                ('birthdate', models.DateField()),
                ('email', models.EmailField(max_length=254, null=True)),
                ('facebook_url', models.URLField(null=True)),
                ('twitter_url', models.URLField(null=True)),
                ('youtube_url', models.URLField(null=True)),
                ('blog_url', models.URLField(null=True)),
                ('website_url', models.URLField(null=True)),
                ('slug', models.CharField(max_length=100)),
                ('subslug', models.CharField(max_length=10, null=True)),
                ('person_xml_id', models.IntegerField(unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_num', models.IntegerField()),
                ('name', models.CharField(max_length=30)),
                ('timing_start_planned', models.DateTimeField(null=True)),
                ('timing_start', models.DateTimeField(null=True)),
                ('timing_end', models.DateTimeField(null=True)),
                ('parliament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='djalthingi.Parliament')),
                ('timing_text', models.CharField(max_length=200, null=True)),
            ],
            options={
                'ordering': ['session_num'],
                'unique_together': {('parliament', 'session_num')},
            },
        ),
        migrations.AddField(
            model_name='issue',
            name='parliament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djalthingi.Parliament'),
        ),
        migrations.AddField(
            model_name='issue',
            name='previous_issues',
            field=models.ManyToManyField(related_name='future_issues', to='djalthingi.Issue'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_num', models.IntegerField()),
                ('doc_type', models.CharField(choices=[('álit nefndar um skýrslu', 'álit nefndar um skýrslu'), ('beiðni um skýrslu', 'beiðni um skýrslu'), ('breytingartillaga', 'breytingartillaga'), ('framhaldsnefndarálit', 'framhaldsnefndarálit'), ('frávísunartilllaga', 'frávísunartilllaga'), ('frestun funda', 'frestun funda'), ('frumvarp', 'frumvarp'), ('frhnál. með brtt.', 'framhaldsnefndarálit með breytingartillögu'), ('frhnál. með frávt.', 'framhaldsnefndarálit með frávísunartillögu'), ('frhnál. með rökst.', 'framhaldsnefndarálit með rökstuðningi'), ('frumvarp eftir 2. umræðu', 'frumvarp eftir 2. umræðu'), ('frumvarp nefndar', 'frumvarp nefndar'), ('frv. til. stjórnarsk.', 'frumvarp til stjórnarskrár'), ('fsp. til munnl. svars', 'fyrirspurn til munnlegs svars'), ('fsp. til skrifl. svars', 'fyrirspurn til skriflegs svars'), ('lög (m.áo.br.)', 'lög (með áorðnum breytingum'), ('lög (samhlj.)', 'lög (samhljóða)'), ('lög í heild', 'lög í heild'), ('nál. með brtt.', 'nefndarálit með breytingartillögu'), ('nál. með frávt.', 'nefndarálit með frávísunartillögu'), ('nál. með rökst.', 'nefndarálit með rökstuðningi'), ('nefndarálit', 'nefndarálit'), ('rökstudd dagskrá', 'rökstudd dagskrá'), ('skýrsla (skv. beiðni)', 'skýrsla (samkvæmt beiðni)'), ('skýrsla n.', 'skýrsla nefndar'), ('skýrsla n. (frumskjal)', 'skýrsla nefndar (frumskjal)'), ('skýrsla rh. (frumskjal)', 'skýrsla ráðherra (frumskjal)'), ('stjórnarfrumvarp', 'stjórnarfrumvarp'), ('stjórnartillaga', 'stjórnartillaga'), ('svar', 'svar'), ('vantraust', 'vantraust'), ('þál. (samhlj.)', 'þingsályktunartillaga (samhljóða)'), ('þál. í heild', 'þingsályktunartillaga í heild'), ('þáltill.', 'þingsályktunartillaga'), ('þáltill. n.', 'þingsályktunartillaga nefndar')], max_length=50)),
                ('time_published', models.DateTimeField()),
                ('is_main', models.BooleanField(default=False)),
                ('html_remote_path', models.CharField(max_length=500, null=True)),
                ('html_filename', models.CharField(max_length=50)),
                ('pdf_remote_path', models.CharField(max_length=500, null=True)),
                ('pdf_filename', models.CharField(max_length=50)),
                ('xhtml', models.TextField()),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='djalthingi.Issue')),
            ],
            options={
                'ordering': ['doc_num'],
                'unique_together': {('issue', 'doc_num')},
            },
        ),
        migrations.CreateModel(
            name='CommitteeSeat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('committee_seat_type', models.CharField(choices=[('nefndarmaður', 'nefndarmaður'), ('varamaður', 'varamaður'), ('kjörinn varamaður', 'kjörinn varamaður'), ('formaður', 'formaður'), ('1. varaformaður', '1. varaformaður'), ('2. varaformaður', '2. varaformaður'), ('áheyrnarfulltrúi', 'áheyrnarfulltrúi')], max_length=20)),
                ('order', models.IntegerField()),
                ('timing_in', models.DateTimeField()),
                ('timing_out', models.DateTimeField(null=True)),
                ('committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committee_seats', to='djalthingi.Committee')),
                ('parliament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committee_seats', to='djalthingi.Parliament')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committee_seats', to='djalthingi.Person')),
            ],
            options={
                'ordering': ['timing_in', 'timing_out'],
            },
        ),
        migrations.AddField(
            model_name='committee',
            name='parliaments',
            field=models.ManyToManyField(related_name='committees', to='djalthingi.Parliament'),
        ),
        migrations.AlterField(
            model_name='issue',
            name='issue_type',
            field=models.CharField(choices=[(b'l', b'lagafrumvarp'), (b'a', b'\xc3\xbeings\xc3\xa1lyktunartillaga'), (b'm', b'fyrirspurn'), (b'q', b'fyrirspurn til skriflegs svars'), (b's', b'sk\xc3\xbdrsla'), (b'b', b'bei\xc3\xb0ni um sk\xc3\xbdrslu'), (b'f', b'frestun \xc3\xa1 fundum Al\xc3\xbeingis'), (b'n', b'\xc3\xa1lit'), (b'v', b'vantrauststillaga')], max_length=1),
        ),
        migrations.AlterField(
            model_name='issue',
            name='issue_group',
            field=models.CharField(choices=[('A', 'þingmál með þingskjölum'), ('B', 'þingmál án þingskjala')], default=b'A', max_length=1),
        ),
        migrations.AlterField(
            model_name='issue',
            name='issue_type',
            field=models.CharField(choices=[('l', 'lagafrumvarp'), ('a', 'þingsályktunartillaga'), ('m', 'fyrirspurn'), ('q', 'fyrirspurn til skriflegs svars'), ('s', 'skýrsla'), ('b', 'beiðni um skýrslu'), ('f', 'frestun á fundum Alþingis'), ('n', 'álit'), ('v', 'vantrauststillaga')], max_length=2),
        ),
        migrations.AlterField(
            model_name='issue',
            name='issue_type',
            field=models.CharField(choices=[('l', 'lagafrumvarp'), ('a', 'þingsályktunartillaga'), ('m', 'fyrirspurn'), ('q', 'fyrirspurn til skriflegs svars'), ('s', 'skýrsla'), ('b', 'beiðni um skýrslu'), ('f', 'frestun á fundum Alþingis'), ('n', 'álit'), ('v', 'vantrauststillaga'), ('al', 'almennar stjórnmálaumræður'), ('av', 'ávarp'), ('dr', 'drengskaparheit'), ('fh', 'framhaldsfundir Alþingis'), ('ft', 'óundirbúinn fyrirspurnatími'), ('kb', 'rannsókn kjörbréfs'), ('ko', 'kosningar'), ('mi', 'minning'), ('ra', 'stefnuræða forsætisráðherra'), ('sr', 'skýrsla ráðherra'), ('st', 'störf þingsins'), ('sþ', 'munnleg skýrsla þingmanns'), ('tk', 'tilkynningar forseta'), ('tr', 'tilkynning frá ríkisstjórninni'), ('um', 'sérstök umræða'), ('yf', 'yfirlýsing forseta'), ('þi', 'þingsetning')], max_length=2),
        ),
        migrations.AddField(
            model_name='issue',
            name='special_inquisitor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issues_special_inquisited', to='djalthingi.Person'),
        ),
        migrations.AddField(
            model_name='issue',
            name='special_inquisitor_description',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='issue',
            name='special_responder',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issues_special_responded', to='djalthingi.Person'),
        ),
        migrations.AddField(
            model_name='issue',
            name='special_responder_description',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='issue',
            name='time_published',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='committee',
            name='parliament_num_first',
            field=models.IntegerField(default=146),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='committee',
            name='parliament_num_last',
            field=models.IntegerField(null=True),
        ),
        migrations.CreateModel(
            name='VoteCasting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timing', models.DateTimeField()),
                ('vote_casting_type_text', models.CharField(max_length=100)),
                ('specifics', models.CharField(max_length=100)),
                ('method', models.CharField(max_length=50, null=True)),
                ('count_yes', models.IntegerField(null=True)),
                ('count_no', models.IntegerField(null=True)),
                ('count_abstain', models.IntegerField(null=True)),
                ('conclusion', models.CharField(max_length=100, null=True)),
                ('vote_casting_xml_id', models.IntegerField(unique=True)),
                ('document', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vote_castings', to='djalthingi.Document')),
                ('issue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vote_castings', to='djalthingi.Issue')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_castings', to='djalthingi.Session')),
                ('to_committee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vote_castings', to='djalthingi.Committee')),
                ('vote_casting_type', models.CharField(default=None, max_length=2)),
            ],
            options={
                'ordering': ['timing'],
            },
        ),
        migrations.AlterField(
            model_name='committee',
            name='committee_xml_id',
            field=models.IntegerField(unique=True),
        ),
        migrations.CreateModel(
            name='CommitteeAgenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timing_start_planned', models.DateTimeField(null=True)),
                ('timing_start', models.DateTimeField(null=True)),
                ('timing_end', models.DateTimeField(null=True)),
                ('timing_text', models.CharField(max_length=200, null=True)),
                ('committee_agenda_xml_id', models.IntegerField(unique=True)),
                ('committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committee_agendas', to='djalthingi.Committee')),
                ('parliament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committee_agendas', to='djalthingi.Parliament')),
            ],
            options={
                'ordering': ['timing_start_planned', 'committee__name'],
            },
        ),
        migrations.CreateModel(
            name='Constituency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('abbreviation_short', models.CharField(max_length=20)),
                ('abbreviation_long', models.CharField(max_length=30, null=True)),
                ('parliament_num_first', models.IntegerField()),
                ('parliament_num_last', models.IntegerField(null=True)),
                ('constituency_xml_id', models.IntegerField(unique=True)),
                ('parliaments', models.ManyToManyField(related_name='constituencies', to='djalthingi.Parliament')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CommitteeAgendaItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('name', models.CharField(max_length=300)),
                ('committee_agenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committee_agenda_items', to='djalthingi.CommitteeAgenda')),
                ('issue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='committee_agenda_items', to='djalthingi.Issue')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('committee_agenda', 'order')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='issue',
            unique_together={('parliament', 'issue_num', 'issue_group')},
        ),
        migrations.CreateModel(
            name='Proposer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(null=True)),
                ('committee_partname', models.CharField(max_length=50, null=True)),
                ('committee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='djalthingi.Committee')),
                ('document', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proposers', to='djalthingi.Document')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subproposers', to='djalthingi.Proposer')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='djalthingi.Person')),
                ('issue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proposers', to='djalthingi.Issue')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('issue', 'person', 'committee', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Rapporteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rapporteurs', to='djalthingi.Issue')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rapporteurs', to='djalthingi.Person')),
            ],
            options={
                'unique_together': {('issue', 'person')},
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_response', models.CharField(choices=[('já', 'já'), ('nei', 'nei'), ('fjarverandi', 'fjarverandi'), ('boðaði fjarvist', 'boðaði fjarvist'), ('greiðir ekki atkvæði', 'greiðir ekki atkvæði')], max_length=20)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='djalthingi.Person')),
                ('vote_casting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='djalthingi.VoteCasting')),
            ],
            options={
                'unique_together': {('vote_casting', 'person')},
            },
        ),
        migrations.AddField(
            model_name='issue',
            name='current_step',
            field=models.CharField(choices=[('distributed', 'Distributed'), ('iteration-1-waiting', 'Awaiting 1st debate'), ('iteration-1-current', 'Currently in 1st debate'), ('iteration-1-finished', '1st debate concluded'), ('committee-1-waiting', 'Sent to committee'), ('committee-1-current', 'Currently in committee'), ('committee-1-reviews-requested', 'Reviews requested'), ('committee-1-reviews-arrived', 'Reviews deadline expired'), ('committee-1-finished', 'Considered by committee'), ('iteration-2-waiting', 'Awaiting 2nd debate'), ('iteration-2-current', 'Currently in 2nd debate'), ('iteration-2-finished', '2nd debate concluded'), ('committee-2-waiting', 'Sent to committee (after 2nd debate)'), ('committee-2-current', 'Currently in committee (after 2nd debate)'), ('committee-2-finished', 'Considered by committee (after 2nd debate)'), ('iteration-3-waiting', 'Awaiting 3rd debate'), ('iteration-3-current', 'Currently in 3rd debate'), ('iteration-3-finished', '3rd debate concluded'), ('concluded', 'Issue concluded'), ('distributed', 'Distributed'), ('iteration-former-waiting', 'Awaiting former debate'), ('iteration-former-current', 'Currently in former debate'), ('iteration-former-finished', 'Former debate concluded'), ('committee-former-waiting', 'Sent to committee'), ('committee-former-current', 'Currently in committee'), ('committee-former-reviews-requested', 'Reviews requested'), ('committee-former-reviews-arrived', 'Reviews deadline expired'), ('committee-former-finished', 'Considered by committee'), ('iteration-latter-waiting', 'Awaiting latter debate'), ('iteration-latter-current', 'Currently in latter debate'), ('iteration-latter-finished', 'Latter debate concluded'), ('concluded', 'Issue concluded'), ('distributed', 'Distributed'), ('answered', 'Answered'), ('distributed', 'Distributed'), ('voted-on', 'Voted on'), ('report-delivered', 'Report delieverd'), ('concluded', 'Concluded')], max_length=40, null=True),
        ),
        migrations.AddField(
            model_name='issue',
            name='fate',
            field=models.CharField(choices=[('rejected', 'rejected'), ('accepted', 'accepted'), ('sent-to-government', 'sent to government')], max_length=40, null=True),
        ),
        migrations.CreateModel(
            name='IssueStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('order', models.IntegerField()),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='djalthingi.Issue')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Minister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('abbreviation_short', models.CharField(max_length=20)),
                ('abbreviation_long', models.CharField(max_length=30)),
                ('parliament_num_first', models.IntegerField()),
                ('parliament_num_last', models.IntegerField(null=True)),
                ('minister_xml_id', models.IntegerField(unique=True)),
                ('parliaments', models.ManyToManyField(related_name='ministers', to='djalthingi.Parliament')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MinisterSeat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timing_in', models.DateTimeField()),
                ('timing_out', models.DateTimeField(null=True)),
                ('minister', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minister_seats', to='djalthingi.Minister')),
                ('parliament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minister_seats', to='djalthingi.Parliament')),
                ('party', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='minister_seats', to='djalthingi.Party')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minister_seats', to='djalthingi.Person')),
            ],
            options={
                'ordering': ['timing_in', 'timing_out'],
            },
        ),
        migrations.AlterField(
            model_name='issue',
            name='parliament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='djalthingi.Parliament'),
        ),
        migrations.CreateModel(
            name='President',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=30)),
                ('president_type', models.CharField(max_length=3)),
                ('is_main', models.BooleanField(default=False)),
                ('order', models.IntegerField(null=True)),
                ('president_xml_id', models.IntegerField(unique=True)),
                ('parliaments', models.ManyToManyField(related_name='presidents', to='djalthingi.Parliament')),
            ],
            options={
                'ordering': ['president_type', 'order'],
            },
        ),
        migrations.CreateModel(
            name='PresidentSeat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timing_in', models.DateTimeField()),
                ('timing_out', models.DateTimeField(null=True)),
                ('parliament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='president_seats', to='djalthingi.Parliament')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='president_seats', to='djalthingi.Person')),
                ('president', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='president_seats', to='djalthingi.President')),
            ],
            options={
                'ordering': ['president__order', 'timing_in'],
            },
        ),
        migrations.CreateModel(
            name='CategoryGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category_group_xml_id', models.IntegerField(unique=True)),
                ('slug', models.CharField(default='', max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=1000)),
                ('category_xml_id', models.IntegerField(unique=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djalthingi.CategoryGroup')),
                ('slug', models.CharField(default='', max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='issue',
            name='categories',
            field=models.ManyToManyField(related_name='issues', to='djalthingi.Category'),
        ),
        migrations.CreateModel(
            name='Speech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('timing_start', models.DateTimeField()),
                ('timing_end', models.DateTimeField()),
                ('seconds', models.IntegerField()),
                ('speech_type', models.CharField(max_length=30)),
                ('iteration', models.CharField(max_length=3, null=True)),
                ('order_in_issue', models.IntegerField(null=True)),
                ('html_remote_path', models.CharField(max_length=500, null=True)),
                ('sgml_remote_path', models.CharField(max_length=500, null=True)),
                ('xml_remote_path', models.CharField(max_length=500, null=True)),
                ('text_remote_path', models.CharField(max_length=500, null=True)),
                ('sound_remote_path', models.CharField(max_length=500, null=True)),
                ('issue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='speeches', to='djalthingi.Issue')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speeches', to='djalthingi.Person')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speeches', to='djalthingi.Session')),
            ],
            options={
                'ordering': ['timing_start'],
                'unique_together': set(),
            },
        ),
        migrations.AlterField(
            model_name='issue',
            name='issue_group',
            field=models.CharField(choices=[('A', 'þingmál með þingskjölum'), ('B', 'þingmál án þingskjala')], default='A', max_length=1),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_num', models.IntegerField()),
                ('sender_name', models.CharField(max_length=200)),
                ('review_type', models.CharField(choices=[('aa', 'áætlun'), ('ab', 'afrit bréfs'), ('ak', 'ályktun'), ('al', 'álit'), ('am', 'almennt'), ('as', 'áskorun'), ('at', 'athugasemd'), ('áu', 'ábending til umfjöllunar'), ('be', 'beiðni'), ('bk', 'bókun'), ('fr', 'frestun á umsögn'), ('fs', 'fyrirspurn'), ('ft', 'fréttatilkynning'), ('fu', 'fundargerð'), ('gg', 'greinargerð'), ('it', 'ítrekun'), ('ka', 'kostnaðaráætlun'), ('lf', 'lagt fram á fundi'), ('lr', 'leiðrétting'), ('mb', 'minnisblað'), ('mm', 'mótmæli'), ('mt', 'mat'), ('na', 'nefndarálit'), ('sa', 'samþykkt'), ('se', 'stuðningserindi'), ('sk', 'skýrsla'), ('su', 'skýrsla til umfjöllunar'), ('tk', 'tilkynning'), ('tl', 'tillaga'), ('tm', 'tilmæli'), ('ub', 'umsögn'), ('uk', 'umsókn'), ('up', 'upplýsingar'), ('vb', 'viðbótarumsögn'), ('vi', 'viðauki'), ('vs', 'vinnuskjal'), ('xx', 'x'), ('yf', 'yfirlit'), ('yg', 'ýmis gögn'), ('ys', 'yfirlýsing')], max_length=2)),
                ('date_arrived', models.DateField(null=True)),
                ('date_sent', models.DateField(null=True)),
                ('pdf_remote_path', models.CharField(max_length=500, null=True)),
                ('pdf_filename', models.CharField(max_length=50)),
                ('committee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='djalthingi.Committee')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='djalthingi.Issue')),
                ('sender_name_description', models.CharField(default='', max_length=200)),
                ('president_seat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='djalthingi.PresidentSeat')),
            ],
            options={
                'ordering': ['sender_name', 'date_arrived', 'log_num'],
                'unique_together': {('issue', 'log_num')},
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_type', models.CharField(choices=[('þingmaður', 'þingmaður'), ('varamaður', 'varamaður'), ('með varamann', 'með varamann')], max_length=20)),
                ('name_abbreviation', models.CharField(default='', max_length=15)),
                ('physical_seat_number', models.IntegerField(default=0, null=True)),
                ('timing_in', models.DateTimeField()),
                ('timing_out', models.DateTimeField(null=True)),
                ('constituency_mp_num', models.PositiveSmallIntegerField()),
                ('constituency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='djalthingi.Constituency')),
                ('parliament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='djalthingi.Parliament')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='djalthingi.Party')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='djalthingi.Person')),
            ],
            options={
                'ordering': ['timing_in', 'timing_out'],
            },
        ),
        migrations.CreateModel(
            name='SessionAgendaItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('discussion_type', models.CharField(choices=[('*', ''), ('0', ''), ('1', '1. umræða'), ('2', '2. umræða'), ('3', '3. umræða'), ('E', 'ein umræða'), ('F', 'fyrri umræða'), ('S', 'síðari umræða')], max_length=1)),
                ('discussion_continued', models.BooleanField(default=False)),
                ('comment_type', models.CharField(max_length=1, null=True)),
                ('comment_text', models.CharField(max_length=100, null=True)),
                ('comment_description', models.CharField(max_length=100, null=True)),
                ('issue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='session_agenda_items', to='djalthingi.Issue')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_agenda_items', to='djalthingi.Session')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('session', 'order')},
            },
        ),
        migrations.AddField(
            model_name='issue',
            name='review_deadline',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='committee',
            name='is_standing',
            field=models.BooleanField(default=True),
        ),
        migrations.RunPython(
            code=configure_standing_committees,
            reverse_code=dummy_function,
        ),
        migrations.AddField(
            model_name='votecasting',
            name='to_minister',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vote_castings', to='djalthingi.Minister'),
        ),
        migrations.AlterField(
            model_name='issue',
            name='issue_type',
            field=models.CharField(choices=[('l', 'lagafrumvarp'), ('a', 'þingsályktunartillaga'), ('q', 'fyrirspurn til skriflegs svars'), ('m', 'fyrirspurn'), ('b', 'beiðni um skýrslu'), ('s', 'skýrsla'), ('n', 'álit'), ('v', 'vantrauststillaga'), ('f', 'frestun á fundum Alþingis'), ('al', 'almennar stjórnmálaumræður'), ('av', 'ávarp'), ('dr', 'drengskaparheit'), ('fh', 'framhaldsfundir Alþingis'), ('ft', 'óundirbúinn fyrirspurnatími'), ('kb', 'rannsókn kjörbréfs'), ('ko', 'kosningar'), ('mi', 'minning'), ('ra', 'stefnuræða forsætisráðherra'), ('sr', 'skýrsla ráðherra'), ('st', 'störf þingsins'), ('sþ', 'munnleg skýrsla þingmanns'), ('tk', 'tilkynningar forseta'), ('tr', 'tilkynning frá ríkisstjórninni'), ('um', 'sérstök umræða'), ('yf', 'yfirlýsing forseta'), ('þi', 'þingsetning')], max_length=2),
        ),
        migrations.RemoveField(
            model_name='issue',
            name='final_vote_complete',
        ),
        migrations.AddField(
            model_name='issue',
            name='to_committee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='issues', to='djalthingi.Committee'),
        ),
        migrations.AddField(
            model_name='issue',
            name='to_minister',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='issues', to='djalthingi.Minister'),
        ),
        migrations.AddField(
            model_name='speech',
            name='president',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='category',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='djalthingi.CategoryGroup'),
        ),
        migrations.AddField(
            model_name='review',
            name='pending_deletion',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='committeeagenda',
            name='location',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='issue',
            name='proposer_type',
            field=models.CharField(choices=[('government', 'Government issue'), ('parliamentarian', 'MP issue')], default='parliamentarian', max_length=30),
        ),
        migrations.AddField(
            model_name='issue',
            name='committee_agenda_item_count',
            field=models.IntegerField(default=0),
        ),
    ]
